{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danya\\\\Desktop\\\\Hasin\\\\frontend\\\\src\\\\Components\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  selectedDisease,\n  diseaseNames\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [tooltip, setTooltip] = useState({\n    display: false,\n    top: 0,\n    left: 0,\n    content: ''\n  });\n  useEffect(() => {\n    if (selectedDisease) {\n      const svg = d3.select(svgRef.current);\n      svg.selectAll('*').remove(); // Clear existing content\n\n      // Find the value for the selected disease\n      const diseaseEntry = diseaseNames.find(disease => disease.name === selectedDisease);\n      const data = [{\n        category: selectedDisease,\n        count: (diseaseEntry === null || diseaseEntry === void 0 ? void 0 : diseaseEntry.value) || 0\n      }];\n      const width = 800;\n      const height = 600;\n      const margin = {\n        top: 40,\n        right: 40,\n        bottom: 70,\n        left: 70\n      };\n      const x = d3.scaleBand().domain(data.map(d => d.category)).range([margin.left, width - margin.right]).padding(0.1);\n      const y = d3.scaleLinear().domain([0, d3.max(data, d => d.count + 10)]).nice().range([height - margin.bottom, margin.top]);\n\n      // Add graph title\n      svg.append('text').attr('x', width / 2).attr('y', margin.top - 10).attr('text-anchor', 'middle').style('font-size', '18px').text(`Occurancy of ${selectedDisease}`);\n\n      // Draw x-axis with label\n      svg.append('g').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0));\n\n      // Draw y-axis with label\n      svg.append('g').attr('transform', `translate(${margin.left}, 0)`).call(d3.axisLeft(y));\n\n      // Draw the bars with tooltip interaction\n      svg.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.category)).attr('y', d => y(d.count)).attr('width', x.bandwidth()).attr('height', d => height - margin.bottom - y(d.count)).attr('fill', 'steelblue').on('mouseover', (event, d) => {\n        setTooltip({\n          display: true,\n          top: event.pageY - 10,\n          left: event.pageX + 10,\n          content: `Occurancy: ${d.count}`\n        });\n      }).on('mouseout', () => setTooltip({\n        display: false,\n        content: ''\n      }));\n    }\n  }, [selectedDisease, diseaseNames]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"800\",\n      height: \"600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), tooltip.display && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        top: tooltip.top,\n        left: tooltip.left,\n        padding: '5px',\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '3px'\n      },\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"SNU0Cn99rKOwlKmSDeG32egq2qw=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Graph","selectedDisease","diseaseNames","_s","svgRef","tooltip","setTooltip","display","top","left","content","svg","select","current","selectAll","remove","diseaseEntry","find","disease","name","data","category","count","value","width","height","margin","right","bottom","x","scaleBand","domain","map","d","range","padding","y","scaleLinear","max","nice","append","attr","style","text","call","axisBottom","tickSizeOuter","axisLeft","enter","bandwidth","on","event","pageY","pageX","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","position","backgroundColor","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/danya/Desktop/Hasin/frontend/src/Components/Graph.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Graph = ({ selectedDisease, diseaseNames }) => {\r\n  const svgRef = useRef();\r\n  const [tooltip, setTooltip] = useState({ display: false, top: 0, left: 0, content: '' });\r\n\r\n  useEffect(() => {\r\n    if (selectedDisease) {\r\n      const svg = d3.select(svgRef.current);\r\n\r\n      svg.selectAll('*').remove(); // Clear existing content\r\n\r\n      // Find the value for the selected disease\r\n      const diseaseEntry = diseaseNames.find((disease) => disease.name === selectedDisease);\r\n\r\n      const data = [\r\n        {\r\n          category: selectedDisease,\r\n          count: diseaseEntry?.value || 0,\r\n        },\r\n      ];\r\n\r\n      const width = 800;\r\n      const height = 600;\r\n      const margin = { top: 40, right: 40, bottom: 70, left: 70 };\r\n\r\n      const x = d3.scaleBand()\r\n        .domain(data.map((d) => d.category))\r\n        .range([margin.left, width - margin.right])\r\n        .padding(0.1);\r\n\r\n      const y = d3.scaleLinear()\r\n        .domain([0, d3.max(data, (d) => d.count + 10)])\r\n        .nice()\r\n        .range([height - margin.bottom, margin.top]);\r\n\r\n      // Add graph title\r\n      svg.append('text')\r\n        .attr('x', width / 2)\r\n        .attr('y', margin.top - 10)\r\n        .attr('text-anchor', 'middle')\r\n        .style('font-size', '18px')\r\n        .text(`Occurancy of ${selectedDisease}`);\r\n\r\n      // Draw x-axis with label\r\n      svg.append('g')\r\n        .attr('transform', `translate(0,${height - margin.bottom})`)\r\n        .call(d3.axisBottom(x).tickSizeOuter(0));\r\n\r\n      // Draw y-axis with label\r\n      svg.append('g')\r\n        .attr('transform', `translate(${margin.left}, 0)`)\r\n        .call(d3.axisLeft(y));\r\n\r\n      // Draw the bars with tooltip interaction\r\n      svg.selectAll('.bar')\r\n        .data(data)\r\n        .enter()\r\n        .append('rect')\r\n        .attr('class', 'bar')\r\n        .attr('x', (d) => x(d.category))\r\n        .attr('y', (d) => y(d.count))\r\n        .attr('width', x.bandwidth())\r\n        .attr('height', (d) => height - margin.bottom - y(d.count))\r\n        .attr('fill', 'steelblue')\r\n        .on('mouseover', (event, d) => {\r\n          setTooltip({\r\n            display: true,\r\n            top: event.pageY - 10,\r\n            left: event.pageX + 10,\r\n            content: `Occurancy: ${d.count}`,\r\n          });\r\n        })\r\n        .on('mouseout', () => setTooltip({ display: false, content: '' }));\r\n    }\r\n  }, [selectedDisease, diseaseNames]);\r\n\r\n  return (\r\n    <div>\r\n      <svg ref={svgRef} width=\"800\" height=\"600\"></svg>\r\n      {tooltip.display && (\r\n        <div\r\n          className=\"tooltip\"\r\n          style={{\r\n            position: 'absolute',\r\n            top: tooltip.top,\r\n            left: tooltip.left,\r\n            padding: '5px',\r\n            backgroundColor: 'white',\r\n            border: '1px solid black',\r\n            borderRadius: '3px',\r\n          }}\r\n        >\r\n          {tooltip.content}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}